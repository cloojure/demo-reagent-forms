;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name json-html.core, :imports nil, :requires {st clojure.string, clojure.string clojure.string, hiccupsrt hiccups.runtime, hiccups.runtime hiccups.runtime}, :uses nil, :defs {edn->html {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/json_html/core.cljs", :line 69, :column 7, :end-line 69, :end-column 16, :arglists (quote ([edn]))}, :name json-html.core/edn->html, :variadic false, :file "resources/public/js/json_html/core.cljs", :end-column 16, :method-params ([edn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([edn]))}, json->hiccup {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/json_html/core.cljs", :line 72, :column 7, :end-line 72, :end-column 19, :arglists (quote ([json]))}, :name json-html.core/json->hiccup, :variadic false, :file "resources/public/js/json_html/core.cljs", :end-column 19, :method-params ([json]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([json]))}, render-map {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/json_html/core.cljs", :line 38, :column 7, :end-line 38, :end-column 17, :arglists (quote ([m]))}, :name json-html.core/render-map, :variadic false, :file "resources/public/js/json_html/core.cljs", :end-column 17, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, render-collection {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/json_html/core.cljs", :line 18, :column 7, :end-line 18, :end-column 24, :arglists (quote ([col]))}, :name json-html.core/render-collection, :variadic false, :file "resources/public/js/json_html/core.cljs", :end-column 24, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, render-keyword {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/json_html/core.cljs", :line 13, :column 7, :end-line 13, :end-column 21, :arglists (quote ([k]))}, :name json-html.core/render-keyword, :variadic false, :file "resources/public/js/json_html/core.cljs", :end-column 21, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, render-set {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/json_html/core.cljs", :line 27, :column 7, :end-line 27, :end-column 17, :arglists (quote ([s]))}, :name json-html.core/render-set, :variadic false, :file "resources/public/js/json_html/core.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, render-string {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/json_html/core.cljs", :line 47, :column 7, :end-line 47, :end-column 20, :arglists (quote ([s]))}, :name json-html.core/render-string, :variadic false, :file "resources/public/js/json_html/core.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, edn->hiccup {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/json_html/core.cljs", :line 66, :column 7, :end-line 66, :end-column 18, :arglists (quote ([edn]))}, :name json-html.core/edn->hiccup, :variadic false, :file "resources/public/js/json_html/core.cljs", :end-column 18, :method-params ([edn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([edn]))}, render {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/json_html/core.cljs", :line 53, :column 7, :end-line 53, :end-column 13, :arglists (quote ([v]))}, :name json-html.core/render, :variadic false, :file "resources/public/js/json_html/core.cljs", :end-column 13, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, sort-map {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/json_html/core.cljs", :line 32, :column 7, :end-line 32, :end-column 15, :arglists (quote ([m]))}, :name json-html.core/sort-map, :variadic false, :file "resources/public/js/json_html/core.cljs", :end-column 15, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, json->html {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/json_html/core.cljs", :line 75, :column 7, :end-line 75, :end-column 17, :arglists (quote ([json]))}, :name json-html.core/json->html, :variadic false, :file "resources/public/js/json_html/core.cljs", :end-column 17, :method-params ([json]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([json]))}, escape-html {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/json_html/core.cljs", :line 6, :column 7, :end-line 6, :end-column 18, :arglists (quote ([s]))}, :name json-html.core/escape-html, :variadic false, :file "resources/public/js/json_html/core.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}}, :require-macros {hiccups hiccups.core, hiccups.core hiccups.core}, :cljs.analyzer/constants {:seen #{:div.jh-type-set :span.jh-type-string :div.jh-type-object :span.jh-empty :tbody :ul :key :table.jh-type-object :else :span.jh-empty-set :tr :td.jh-value.jh-array-value :span.jh-empty-collection :span.jh-type-number :span.jh-empty-map :span.jh-empty-string :th.jh-key.jh-object-key :th.jh-key.jh-array-key :span.jh-type-bool :span.jh-type-date :td.jh-value.jh-object-value :li.jh-value}, :order [:div.jh-type-object :span.jh-empty-collection :table.jh-type-object :tbody :tr :th.jh-key.jh-array-key :td.jh-value.jh-array-value :key :div.jh-type-set :span.jh-empty-set :ul :li.jh-value :else :span.jh-empty-map :th.jh-key.jh-object-key :td.jh-value.jh-object-value :span.jh-type-string :span.jh-empty-string :span.jh-type-date :span.jh-type-bool :span.jh-type-number :span.jh-empty]}, :doc nil}