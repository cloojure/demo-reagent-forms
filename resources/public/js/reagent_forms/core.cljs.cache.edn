;; Analyzed by ClojureScript 1.7.122
{:use-macros {render-element reagent-forms.macros}, :excludes #{}, :name reagent-forms.core, :imports nil, :requires {clojure.walk clojure.walk, clojure.string clojure.string, gstring goog.string, goog.string goog.string, goog.string.format goog.string.format, reagent reagent.core, reagent.core reagent.core, reagent-forms.datepicker reagent-forms.datepicker}, :uses {postwalk clojure.walk, atom reagent.core, datepicker reagent-forms.datepicker, format-date reagent-forms.datepicker, parse-format reagent-forms.datepicker, split clojure.string, trim clojure.string}, :defs {mk-selections {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 303, :column 8, :end-line 303, :end-column 21, :private true, :arglists (quote ([id selectors {:keys [get multi-select]}]))}, :private true, :name reagent-forms.core/mk-selections, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 21, :method-params ([id selectors p__6903]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 303, :end-line 303, :max-fixed-arity 3, :fn-var true, :arglists (quote ([id selectors {:keys [get multi-select]}]))}, wrap-fns {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 41, :column 7, :end-line 41, :end-column 15, :arglists (quote ([opts node]))}, :name reagent-forms.core/wrap-fns, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 15, :method-params ([opts node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([opts node]))}, wrap-save-fn {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 37, :column 7, :end-line 37, :end-column 19, :arglists (quote ([save! wrapper]))}, :name reagent-forms.core/wrap-save-fn, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 19, :method-params ([save! wrapper]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([save! wrapper]))}, id->path {:name reagent-forms.core/id->path, :file "resources/public/js/reagent_forms/core.cljs", :line 15, :column 1, :end-line 15, :end-column 24, :private true, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 15, :column 16, :end-line 15, :end-column 24, :private true}}, bind {:name reagent-forms.core/bind, :file "resources/public/js/reagent_forms/core.cljs", :line 75, :column 1, :end-line 75, :end-column 15, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 75, :column 11, :end-line 75, :end-column 15}}, format-type {:name reagent-forms.core/format-type, :file "resources/public/js/reagent_forms/core.cljs", :line 51, :column 1, :end-line 51, :end-column 22, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 51, :column 11, :end-line 51, :end-column 22}}, selection-group {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 316, :column 8, :end-line 316, :end-column 23, :private true, :arglists (quote ([[type {:keys [field id], :as attrs} & selection-items] {:keys [get], :as opts}]))}, :private true, :name reagent-forms.core/selection-group, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 23, :method-params ([p__6918 p__6919]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 316, :end-line 316, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[type {:keys [field id], :as attrs} & selection-items] {:keys [get], :as opts}]))}, wrap-get-fn {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 33, :column 7, :end-line 33, :end-column 18, :arglists (quote ([get wrapper]))}, :name reagent-forms.core/wrap-get-fn, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 18, :method-params ([get wrapper]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([get wrapper]))}, map-options {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 344, :column 7, :end-line 344, :end-column 18, :arglists (quote ([options]))}, :name reagent-forms.core/map-options, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 18, :method-params ([options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 344, :end-line 344, :max-fixed-arity 1, :fn-var true, :arglists (quote ([options]))}, extract-selectors {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 310, :column 7, :end-line 310, :end-column 24, :arglists (quote ([selectors])), :doc "selectors might be passed in inline or as a collection"}, :name reagent-forms.core/extract-selectors, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 24, :method-params ([selectors]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 310, :end-line 310, :max-fixed-arity 1, :fn-var true, :arglists (quote ([selectors])), :doc "selectors might be passed in inline or as a collection"}, init-field {:name reagent-forms.core/init-field, :file "resources/public/js/reagent_forms/core.cljs", :line 100, :column 1, :end-line 100, :end-column 21, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 100, :column 11, :end-line 100, :end-column 21}}, default-selection {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 350, :column 7, :end-line 350, :end-column 24, :arglists (quote ([options v]))}, :name reagent-forms.core/default-selection, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 24, :method-params ([options v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 350, :end-line 350, :max-fixed-arity 2, :fn-var true, :arglists (quote ([options v]))}, valid-number-ending? {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 57, :column 7, :end-line 57, :end-column 27, :arglists (quote ([n]))}, :name reagent-forms.core/valid-number-ending?, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 27, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, bind-fields {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 380, :column 7, :end-line 380, :end-column 18, :arglists (quote ([form doc & events])), :doc "creates data bindings between the form fields and the supplied atom\n   form - the form template with the fields\n   doc - the document that the fields will be bound to\n   events - any events that should be triggered when the document state changes", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(form doc events)], :arglists ([form doc & events]), :arglists-meta (nil)}}, :name reagent-forms.core/bind-fields, :variadic true, :file "resources/public/js/reagent_forms/core.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(form doc events)], :arglists ([form doc & events]), :arglists-meta (nil)}, :method-params [(form doc events)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 380, :end-line 380, :max-fixed-arity 2, :fn-var true, :arglists ([form doc & events]), :doc "creates data bindings between the form fields and the supplied atom\n   form - the form template with the fields\n   doc - the document that the fields will be bound to\n   events - any events that should be triggered when the document state changes"}, field? {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 375, :column 8, :end-line 375, :end-column 14, :private true, :arglists (quote ([node]))}, :private true, :name reagent-forms.core/field?, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 14, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 375, :end-line 375, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, set-doc-value {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 23, :column 7, :end-line 23, :end-column 20, :arglists (quote ([doc id value events]))}, :name reagent-forms.core/set-doc-value, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 20, :method-params ([doc id value events]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 4, :fn-var true, :arglists (quote ([doc id value events]))}, group-item {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 289, :column 8, :end-line 289, :end-column 18, :private true, :arglists (quote ([[type {:keys [key touch-event], :as attrs} & body] {:keys [save! multi-select]} selections field id]))}, :private true, :name reagent-forms.core/group-item, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 18, :method-params ([p__6891 p__6892 selections field id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 289, :end-line 289, :max-fixed-arity 5, :fn-var true, :arglists (quote ([[type {:keys [key touch-event], :as attrs} & body] {:keys [save! multi-select]} selections field id]))}, value-of {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 12, :column 7, :end-line 12, :end-column 15, :arglists (quote ([element]))}, :name reagent-forms.core/value-of, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 15, :method-params ([element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([element]))}, format-value {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 61, :column 7, :end-line 61, :end-column 19, :arglists (quote ([fmt value]))}, :name reagent-forms.core/format-value, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 19, :method-params ([fmt value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fmt value]))}, set-attrs {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 95, :column 8, :end-line 95, :end-column 17, :private true, :arglists (quote ([[type attrs & body] opts & [default-attrs]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [([type attrs & body] opts [default-attrs])], :arglists ([[type attrs & body] opts & [default-attrs]]), :arglists-meta (nil)}}, :private true, :name reagent-forms.core/set-attrs, :variadic true, :file "resources/public/js/reagent_forms/core.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [([type attrs & body] opts [default-attrs])], :arglists ([[type attrs & body] opts & [default-attrs]]), :arglists-meta (nil)}, :method-params [([type attrs & body] opts [default-attrs])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists ([[type attrs & body] opts & [default-attrs]])}, mk-save-fn {:protocol-inline nil, :meta {:file "/home/alan/expr/forms-example/resources/public/js/reagent_forms/core.cljs", :line 29, :column 8, :end-line 29, :end-column 18, :private true, :arglists (quote ([doc events]))}, :private true, :name reagent-forms.core/mk-save-fn, :variadic false, :file "resources/public/js/reagent_forms/core.cljs", :end-column 18, :method-params ([doc events]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([doc events]))}}, :require-macros {reagent-forms.macros reagent-forms.macros}, :cljs.analyzer/constants {:seen #{:tab-index :span.input-group-addon :selector :day :item-class :email :block :visible? :get :on-mouse-enter :fmt :input-placeholder :ul :valid? :aria-hidden :key :placeholder :numeric :radio :password :default-checked :checkbox :default :on-focus :name :touch-event :li :multi-select :value :in-fn :postamble :highlight-class :file :default-value :datepicker :typeahead :on-blur :month :data-source :field :type :alert :input.form-control :list-class :div.input-group.date :en-US :multiple :input-class :on-click :date-format :tel :clear-on-focus? :style :textarea :lang :preamble :year :event :list :div.datepicker-wrapper :label :id :class :save! :checked :choice-fn :container :files :input-field :out-fn :display :auto-close? :on-mouse-leave :on-mouse-over :closeable? :button.close :input :read-only :i.glyphicon.glyphicon-calendar :on-change :hierarchy :on-key-down :result-fn :doc :none :inline :range :single-select :text}, :order [:doc :get :save! :in-fn :out-fn :hierarchy :range :numeric :default :field :text :password :email :tel :textarea :input-field :id :fmt :value :on-change :checkbox :default-checked :checked :container :valid? :visible? :class :type :on-blur :datepicker :date-format :inline :auto-close? :lang :en-US :month :year :day :div.datepicker-wrapper :div.input-group.date :input.form-control :read-only :on-click :span.input-group-addon :i.glyphicon.glyphicon-calendar :label :preamble :postamble :placeholder :alert :event :touch-event :closeable? :button.close :aria-hidden :radio :name :typeahead :result-fn :item-class :input-placeholder :highlight-class :list-class :data-source :input-class :clear-on-focus? :choice-fn :input :on-focus :on-key-down :ul :style :on-mouse-enter :on-mouse-leave :display :none :block :li :tab-index :key :on-mouse-over :file :files :multiple :multi-select :selector :single-select :list :default-value]}, :doc nil}